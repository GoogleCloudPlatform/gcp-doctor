project: gcpdiag-lb2-aaaa, parameters: {backend_service_name=web-backend-service,project_id=gcpdiag-
lb2-aaaa}

lb/unhealthy-backends: Load Balancer Unhealthy Backends Analyzer.

  This runbook helps investigate why backends in a load balancer are unhealthy.
  It confirms and summarizes the current health status of the backends, aiding
  in identifying any unhealthy instances.

  Key Investigation Areas:

  - Firewalls:
      - Verifies if firewall rules are properly configured to allow health check
      traffic.
  - Port Configuration:
      - Validates if the health check and serving ports are configured
      correctly, ensuring they are not mismatched.
  - Logging:
      - Checks if health check logging is enabled to aid in troubleshooting.
  - Health Check Logs (if enabled):
      - Analyzes the latest health check logs to identify the specific reasons
      for backend unhealthiness:
          - Timeouts: Identifies if the backend is timing out and provides
          potential causes and remediation steps.
          - Unhealthy: Indicates that the backend is reachable but doesn't meet
          the health check's criteria. It provides guidance on the expected
          health check behavior and suggests configuration checks.
          - Unknown: Explains the potential reasons for the "UNKNOWN" health
          state and suggests actions like adjusting timeouts or checking for
          Google Cloud outages.
  - Past Health Check Success:
      - Checks if the health check has worked successfully in the past to
      determine if the issue is recent or ongoing.
  
[START]: Checks the health of a specified load balancer's backends.
[INFO]: name: web-backend-service, region: None

   - gcpdiag-lb2-aaaa/web-backend-service                                 [FAIL]
     [REASON]
      We found unhealthy backends in backend service web-backend-service in scope global
      Group https://www.googleapis.com/compute/v1/projects/gcpdiag-lb2-aaaa/zones/us-east1-b/instanceGroups/lb-backend-example has 2/2 unhealthy backends


     [REMEDIATION]
     Further investigation is required to identify the root cause and apply appropriate fixes.

[GATEWAY]: Check if health check logging is enabled.

   - gcpdiag-lb2-aaaa/http-basic-check                                    [OK]
     [REASON]
     Health check logging is enabled

[GATEWAY]: Look for the latest health check logs and based on that decide what to do next.
[INFO]: {'insertId': '13pdgcnc969', 'jsonPayload': {'healthCheckProbeResult': {'healthState': 'UNHEALTHY', 'previousHealthState': 'HEALTHY', 'targetIp': '10.142.0.2', 'ipAddress': '10.142.0.2', 'probeCompletionTimestamp': '2024-08-13T09:20:21.631554663Z', 'targetPort': 80, 'probeRequest': '/', 'probeSourceIp': '35.191.193.100', 'probeResultText': 'HTTP response: , Error: Timeout waiting for connect', 'healthCheckProtocol': 'HTTP', 'responseLatency': '5.001402s', 'detailedHealthState': 'TIMEOUT', 'previousDetailedHealthState': 'HEALTHY'}}, 'resource': {'type': 'gce_instance_group', 'labels': {'instance_group_id': '3727997629940134718', 'project_id': 'gcpdiag-lb2-aaaa', 'location': 'us-east1-b', 'instance_group_name': 'lb-backend-example'}}, 'timestamp': '2024-08-13T09:20:22.199333012Z', 'severity': 'INFO', 'logName': 'projects/gcpdiag-lb2-aaaa/logs/compute.googleapis.com%2Fhealthchecks', 'receiveTimestamp': '2024-08-13T09:20:22.666336211Z'}
[AUTOMATED STEP]: Analyzes logs with the detailed health check state TIMEOUT

   - gcpdiag-lb2-aaaa/web-backend-service                                 [UNCERTAIN]
     [REASON]
     In the health check logs, we found logs with the detailed health state TIMEOUT.
     The backend might be timing out because:
     1. The application is overloaded and taking too long to respond.
     2. The backend service or health check timeout is too low.
     3. Connection to the endpoint cannot be established - the backend instance has crashed or is otherwise unresponsive.
     The following responses were received from your backends: "HTTP response: , Error: Timeout waiting for connect"

     [REMEDIATION]
     1. Make sure that the backend service timeout (current value: 30s) and health check timeout (current value: 5s) are appropriately configured to accommodate your application's expected response time.
     2. Investigate your application's configuration to ensure it is correctly handling health check probe requests. Your health check is using HTTP protocol, and it is set to: 
     - send a prober requests to the / path on port 80 
     - expect a response with an HTTP 200 (OK) status code
     3. Check if firewall rules or iptables configurations are not blocking the health check probes from reaching the backend instances, resulting in timeouts.

[AUTOMATED STEP]: Checks if the health check has worked successfully in the past.

   - gcpdiag-lb2-aaaa/web-backend-service                                 [UNCERTAIN]
     [REASON]
     https://www.googleapis.com/compute/v1/projects/gcpdiag-lb2-aaaa/zones/us-east1-b/instanceGroups/lb-backend-example: Backends transitioned to an unhealthy state at 2024-08-13T09:20:22.666336211Z


     [REMEDIATION]
     Check the logs and monitoring metrics for those instances, focusing on the given timeframes to see if there were any errors, crashes, or resource exhaustion issues that coincide with the unhealthy transition. You can also inspect any application-specific logs for errors or warnings around the timestamp.

[AUTOMATED STEP]: Checks if health check sends probe requests to the different port than serving port.

   - gcpdiag-lb2-aaaa/web-backend-service                                 [UNCERTAIN]
     [REASON]
     The load balancer is performing health checks on port 88. We detected that within some backend instance groups, this is different than the port that the load balancer is using for serving traffic. The backend service is configured to use the "http" port, which is translated to a port number based on the "http" port mapping within each backend instance group.

     Affected backends:
     projects/gcpdiag-lb2-aaaa/zones/us-east1-b/instanceGroups/lb-backend-example - port name "http" translates to port 80

     This configuration can be problematic unless you have configured the load balancer to use a different port for health checks purposefully.

[END]: Finalizing unhealthy backends diagnostics...


project: gcpdiag-lb2-aaaa, parameters: {backend_service_name=backend-service-2,project_id=gcpdiag-
lb2-aaaa,region=europe-west4}

lb/unhealthy-backends: Load Balancer Unhealthy Backends Analyzer.

  This runbook helps investigate why backends in a load balancer are unhealthy.
  It confirms and summarizes the current health status of the backends, aiding
  in identifying any unhealthy instances.

  Key Investigation Areas:

  - Firewalls:
      - Verifies if firewall rules are properly configured to allow health check
      traffic.
  - Port Configuration:
      - Validates if the health check and serving ports are configured
      correctly, ensuring they are not mismatched.
  - Logging:
      - Checks if health check logging is enabled to aid in troubleshooting.
  - Health Check Logs (if enabled):
      - Analyzes the latest health check logs to identify the specific reasons
      for backend unhealthiness:
          - Timeouts: Identifies if the backend is timing out and provides
          potential causes and remediation steps.
          - Unhealthy: Indicates that the backend is reachable but doesn't meet
          the health check's criteria. It provides guidance on the expected
          health check behavior and suggests configuration checks.
          - Unknown: Explains the potential reasons for the "UNKNOWN" health
          state and suggests actions like adjusting timeouts or checking for
          Google Cloud outages.
  - Past Health Check Success:
      - Checks if the health check has worked successfully in the past to
      determine if the issue is recent or ongoing.
  
[START]: Checks the health of a specified load balancer's backends.
[INFO]: name: backend-service-2, region: europe-west4

   - gcpdiag-lb2-aaaa/backend-service-2                                   [FAIL]
     [REASON]
      We found unhealthy backends in backend service backend-service-2 in scope europe-west4
      Group https://www.googleapis.com/compute/v1/projects/gcpdiag-lb2-aaaa/zones/europe-west4-b/networkEndpointGroups/neg1 has 1/1 unhealthy backends


     [REMEDIATION]
     Further investigation is required to identify the root cause and apply appropriate fixes.

[GATEWAY]: Check if health check logging is enabled.

   - gcpdiag-lb2-aaaa/tcp-basic-check-2                                   [OK]
     [REASON]
     Health check logging is enabled

[GATEWAY]: Look for the latest health check logs and based on that decide what to do next.
[INFO]: {'insertId': '13pdgcnc969', 'jsonPayload': {'healthCheckProbeResult': {'healthState': 'UNHEALTHY', 'previousHealthState': 'HEALTHY', 'targetIp': '10.142.0.2', 'ipAddress': '10.142.0.2', 'probeCompletionTimestamp': '2024-08-13T09:20:21.631554663Z', 'targetPort': 80, 'probeRequest': '/', 'probeSourceIp': '35.191.193.100', 'probeResultText': 'HTTP response: , Error: Timeout waiting for connect', 'healthCheckProtocol': 'HTTP', 'responseLatency': '5.001402s', 'detailedHealthState': 'TIMEOUT', 'previousDetailedHealthState': 'HEALTHY'}}, 'resource': {'type': 'gce_instance_group', 'labels': {'instance_group_id': '3727997629940134718', 'project_id': 'gcpdiag-lb2-aaaa', 'location': 'us-east1-b', 'instance_group_name': 'lb-backend-example'}}, 'timestamp': '2024-08-13T09:20:22.199333012Z', 'severity': 'INFO', 'logName': 'projects/gcpdiag-lb2-aaaa/logs/compute.googleapis.com%2Fhealthchecks', 'receiveTimestamp': '2024-08-13T09:20:22.666336211Z'}
[AUTOMATED STEP]: Analyzes logs with the detailed health check state TIMEOUT

   - gcpdiag-lb2-aaaa/backend-service-2                                   [UNCERTAIN]
     [REASON]
     In the health check logs, we found logs with the detailed health state TIMEOUT.
     The backend might be timing out because:
     1. The application is overloaded and taking too long to respond.
     2. The backend service or health check timeout is too low.
     3. Connection to the endpoint cannot be established - the backend instance has crashed or is otherwise unresponsive.
     The following responses were received from your backends: "HTTP response: , Error: Timeout waiting for connect"

     [REMEDIATION]
     1. Make sure that the backend service timeout (current value: 30s) and health check timeout (current value: 5s) are appropriately configured to accommodate your application's expected response time.
     2. Investigate your application's configuration to ensure it is correctly handling health check probe requests. Your health check is using TCP protocol, and it is set to: 
     - send a prober requests on port 80
     - expect a successful TCP handshake
     3. Check if firewall rules or iptables configurations are not blocking the health check probes from reaching the backend instances, resulting in timeouts.

[AUTOMATED STEP]: Checks if the health check has worked successfully in the past.

   - gcpdiag-lb2-aaaa/backend-service-2                                   [UNCERTAIN]
     [REASON]
     https://www.googleapis.com/compute/v1/projects/gcpdiag-lb2-aaaa/zones/europe-west4-b/networkEndpointGroups/neg1: Backends transitioned to an unhealthy state at 2024-08-13T09:20:22.666336211Z


     [REMEDIATION]
     Check the logs and monitoring metrics for those instances, focusing on the given timeframes to see if there were any errors, crashes, or resource exhaustion issues that coincide with the unhealthy transition. You can also inspect any application-specific logs for errors or warnings around the timestamp.

[AUTOMATED STEP]: Checks if health check sends probe requests to the different port than serving port.

   - gcpdiag-lb2-aaaa/backend-service-2                                   [OK]
     [REASON]
     The load balancer is performing health checks on the same port that it is using for serving traffic. This is the standard configuration.

[END]: Finalizing unhealthy backends diagnostics...


