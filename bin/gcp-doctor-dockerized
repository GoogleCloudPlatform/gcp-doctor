#!/bin/bash
set -e
THIS_WRAPPER_VERSION=0.4
source <(curl -sf https://storage.googleapis.com/gcp-doctor/release-version|grep -Ei '^\w*=[0-9a-z/\._-]*$')
if [[ $THIS_WRAPPER_VERSION != $WRAPPER_VERSION ]]; then
  echo
  echo "## ERROR:"
  echo "## This gcp-doctor wrapper script is obsolete ($THIS_WRAPPER_VERSION, newest: $WRAPPER_VERSION)."
  echo "## Please update the wrapper script to the latest version as follows:"
  echo
  echo "curl https://storage.googleapis.com/gcp-doctor/gcp-doctor.sh >gcp-doctor"
  echo "chmod +x gcp-doctor"
  echo
  exit 1
fi

CWD=$(pwd)
[ -t 0 ] && USE_TTY="-it" || USE_TTY=""
# Note: for some reason sometimes docker creates the container-path in the host
# and this can result in ~/.cache/gcp-doctor being owned by root. Workaround
# this issue by creating ~/.cache/gcp-doctor as well first, so that the
# ownership is correct.
mkdir -p "$HOME/.cache/gcp-doctor" "$HOME/.cache/gcp-doctor-dockerized"
exec docker run "$USE_TTY" \
  --rm \
  -u "$(id -u):$(id -g)" \
  -e "USER=$(id -n -u)" \
  -e "GROUP=$(id -n -g)" \
  -e "SHELL=/bin/bash" \
  -e HOME -e LANG -e GOOGLE_AUTH_TOKEN -e CLOUD_SHELL \
  -v "$HOME/.cache/gcp-doctor-dockerized:$HOME/.cache/gcp-doctor" \
  -v "$CWD:$CWD" -w "$CWD" \
  "$DOCKER_IMAGE:$DOCKER_IMAGE_VERSION" /opt/gcp-doctor/bin/gcp-doctor "$@"
